# Mac OSX makefile for FreeImage

# This file can be generated by ./gensrclist.sh
include Makefile.srcs

# Find SDK path via xcode-select, backwards compatible with Xcode versions < 4.5
MACOSX_SYSROOT = $(shell xcrun --show-sdk-path)
# Specify deployment target here
MACOSX_DEPLOYMENT_TARGET = 10.11

# General configuration variables:
CC_ARM64 = $(shell xcrun -find clang)
CPP_ARM64 = $(shell xcrun -find clang++)
MACOSX_DEPLOY = -mmacosx-version-min=$(MACOSX_DEPLOYMENT_TARGET)
COMPILERFLAGS = -Os -fexceptions -fvisibility=hidden -DNO_LCMS -D__ANSI__
COMPILERFLAGS_ARM64 = -arch arm64
COMPILERPPFLAGS = -Wno-ctor-dtor-privacy -D__ANSI__ -std=c++11 -stdlib=libc++ -Wc++11-narrowing
INCLUDE +=
INCLUDE_ARM64 = -isysroot $(MACOSX_SYSROOT)
CFLAGS_ARM64 = $(COMPILERFLAGS) $(COMPILERFLAGS_ARM64) $(INCLUDE) $(INCLUDE_ARM64) $(MACOSX_DEPLOY)
CPPFLAGS_ARM64 = $(COMPILERPPFLAGS) $(CFLAGS_ARM64) -DPNG_ARM_NEON_OPT=0
LIBRARIES_ARM64 = $(MACOSX_DEPLOY) -Wl,-syslibroot $(MACOSX_SYSROOT) 
LIBTOOL = libtool
LIPO = lipo

TARGET = freeimage
STATICLIB = lib$(TARGET).a
SHAREDLIB = lib$(TARGET).dylib
LIBNAME = $(SHAREDLIB)
HEADER = Source/FreeImage.h

.SUFFIXES: .o-arm64
MODULES_ARM64 = $(SRCS:.c=.o-arm64)
MODULES_ARM64 := $(MODULES_ARM64:.cpp=.o-arm64)
MODULES_ARM64 += ./Source/LibJXR/image/sys/perfTimerANSI.o-arm64
MODULES_ARM64 += ./Source/pngreference/filter_neon_intrinsics.o-arm64

PREFIX = /usr/local
INSTALLDIR = $(PREFIX)/lib
INCDIR = $(PREFIX)/include

default: all

all: dist

dist: FreeImage
	cp *.a *.dylib Dist
	cp Source/FreeImage.h Dist

FreeImage: $(STATICLIB) $(SHAREDLIB)

$(STATICLIB): $(STATICLIB)-arm64
	cp -p $(STATICLIB)-arm64 $(STATICLIB)

$(STATICLIB)-arm64: $(MODULES_ARM64)
	$(LIBTOOL) -static -arch_only arm64 -o $@ $(MODULES_ARM64)

$(SHAREDLIB): $(SHAREDLIB)-arm64
	$(LIPO) -create $(SHAREDLIB)-arm64 -output $(SHAREDLIB)

$(SHAREDLIB)-arm64: $(MODULES_ARM64)
	$(CPP_ARM64) -arch arm64 -dynamiclib $(LIBRARIES_ARM64) -o $@ $(MODULES_ARM64)

.c.o-arm64:
	$(CC_ARM64) $(CFLAGS_ARM64) -c $< -o $@

.cpp.o-arm64:
	$(CPP_ARM64) $(CPPFLAGS_ARM64) -c $< -o $@

install:
	install -d -m 755 -o root -g wheel $(INCDIR) $(INSTALLDIR)
	install -m 644 -o root -g wheel $(HEADER) $(INCDIR)
	install -m 644 -o root -g wheel $(SHAREDLIB) $(STATICLIB) $(INSTALLDIR)
	ranlib -sf $(INSTALLDIR)/$(STATICLIB)
	ln -sf $(SHAREDLIB) $(INSTALLDIR)/$(LIBNAME)

clean:
	rm -f core Dist/*.* u2dtmp* $(MODULES_ARM64) $(STATICLIB) $(STATICLIB)-arm64 $(SHAREDLIB) $(SHAREDLIB)-arm64

